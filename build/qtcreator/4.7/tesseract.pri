VERSION = 0.10.3.5
 
QT -= gui
QT -= core

CONFIG += debug_and_release exceptions stl sse sse2

# Path Variables
SOLUTION_BIN_PATH = ../../../../bin
SOLUTION_TMP_PATH = ../../../../tmp
SOLUTION_LIB_PATH = ../../../../lib
SOLUTION_LANG_PATH = ../../../../lang
SOLUTION_SOURCE_PATH = ../../../../src
SOLUTION_FORMS_PATH = ../../../../forms
SOLUTION_INCLUDE_PATH = ../../../../include
SOLUTION_SCRIPTS_PATH = ../../../../scripts
SOLUTION_RESOURCE_PATH = ../../../../resources

# Project administration is done by qt creator on all platforms except windows.
win32 {

TEMPLATE = vcsubdirs
VCPROJ_KEYWORD  = Qt4VSv1.0
QMAKE_COMPILER_DEFINES += _MSC_VER=1500 WIN32

QMAKE_CXXFLAGS += /GR-
QMAKE_CXXFLAGS_RELEASE += -MP$(NUMBER_OF_PROCESSORS) /Ox /Ob2 /Oi /Ot /Oy /GL /arch:SSE2 /openmp /Zp16

QMAKE_CXXFLAGS_DEBUG += /Fd$(IntDir)$(ProjectName)_c.pdb /Od /Gm
QMAKE_LFLAGS_DEBUG += /PDB:$(IntDir)$(ProjectName)_l.pdb
QMAKE_LFLAGS_RELEASE += /LTCG /OPT:REF /OPT:ICF

CONFIG(Debug):DEFINES += TESSERACT_USE_VLD
					
CONFIG += resources incremental

# It is better to use variables for projects in visual studio
INCLUDEPATH += $$SOLUTION_INCLUDE_PATH\\$(ProjectName)

ARCHITECTURE_PATH = vc9/$(PlatformName)
ARCHITECTURE_PATH_DEBUG = mswd/$$ARCHITECTURE_PATH
ARCHITECTURE_PATH_RELEASE = msw/$$ARCHITECTURE_PATH
ACT_PROJECTNAME = $(ProjectName)

} else {

TEMPLATE = subdirs

ARCHITECTURE_PATH = gtcreator/x86
ARCHITECTURE_PATH_DEBUG = linuxd/$$ARCHITECTURE_PATH
ARCHITECTURE_PATH_RELEASE = linux/$$ARCHITECTURE_PATH
ACT_PROJECTNAME = $$PROJECT_NAME
}

# Compile portable version
DEFINES += TESSERACT_COMPILE_PORTABLE

# Set debug and non debug variables
CONFIG(Debug):DEFINES += DEBUG
CONFIG(Release):DEFINES += NDEBUG

build_pass:CONFIG(debug, debug|release) {
	unix: TARGET = $$join(TARGET,,,_debug)
	else: TARGET = $$join(TARGET,,,d)
}

# Boost dependency
INCLUDEPATH += $(BOOST)

#CONFIG(Debug):QMAKE_POST_LINK += $$SOLUTION_SCRIPTS_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME/copy_images.bat
#CONFIG(Release):QMAKE_POST_LINK += $$SOLUTION_SCRIPTS_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME/copy_images.bat

CONFIG(Debug):DESTDIR = $$SOLUTION_BIN_PATH/$$ARCHITECTURE_PATH_DEBUG
CONFIG(Release):DESTDIR = $$SOLUTION_BIN_PATH/$$ARCHITECTURE_PATH_RELEASE

CONFIG(Debug):OBJECTS_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME
CONFIG(Release):OBJECTS_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME

CONFIG(Debug):OUTBASE = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME
CONFIG(Release):OUTBASE = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME




win32{
# crap qt moccing shit does not work properly with $()
CONFIG(Debug):RES_FILE = $$SOLUTION_TMP_PATH/vc9/mswd/Win32/base/based.res
CONFIG(Release):RES_FILE = $$SOLUTION_TMP_PATH/vc9/msw/Win32/base/base.res

CONFIG(Debug):MOC_DIR = $$SOLUTION_TMP_PATH/vc9/mswd/Win32/moc
CONFIG(Release):MOC_DIR = $$SOLUTION_TMP_PATH/vc9/msw/Win32/moc

CONFIG(Debug):UI_DIR = $$SOLUTION_TMP_PATH/vc9/mswd/Win32/ui
CONFIG(Release):UI_DIR = $$SOLUTION_TMP_PATH//vc9/msw/Win32/moc

CONFIG(Debug):RCC_DIR = $$SOLUTION_TMP_PATH/vc9/mswd/Win32/rcc
CONFIG(Release):RCC_DIR = $$SOLUTION_TMP_PATH/vc9/mswd/Win32/rcc
} else {

CONFIG(Debug):RES_FILE = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME/$$join(ACT_PROJECTNAME,,,.res)
CONFIG(Release):RES_FILE = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME/$$join(ACT_PROJECTNAME,,,.res) 

CONFIG(Debug):MOC_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME
CONFIG(Release):MOC_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME

CONFIG(Debug):UI_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME
CONFIG(Release):UI_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME

CONFIG(Debug):RCC_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_DEBUG/$$ACT_PROJECTNAME
CONFIG(Release):RCC_DIR = $$SOLUTION_TMP_PATH/$$ARCHITECTURE_PATH_RELEASE/$$ACT_PROJECTNAME

}